# Created by: Ryan King

name: NightlyBuildCI

on:
  workflow_dispatch: {} # Can be run manually from actions page if needed.
#   schedule:
#     - cron: '0 4 * * 1-5' # Scheduled to run at 11PM Mon-Fri.

env:
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  PROJECT_PATH: .

jobs:
  buildWithWindows:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%m-%d')"
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}
      - uses: game-ci/unity-builder@v2
        with:
          buildName: ${{ github.event.repository.name }}_${{ steps.date.outputs.date }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}_${{ steps.date.outputs.date }}
          path: build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: NightlyBuild/${{ github.event.repository.name }}_${{ steps.date.outputs.date }}_${{ github.event.push.head }}
          release_name: NightlyBuild/${{ github.event.repository.name }}_${{ steps.date.outputs.date }}_${{ github.event.push.head }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: build/${{ matrix.targetPlatform }}/${{ github.event.repository.name }}_${{ steps.date.outputs.date }}.zip
          asset_name: ${{ github.event.repository.name }}_${{ steps.date.outputs.date }}.zip
          asset_content_type: application/zip
